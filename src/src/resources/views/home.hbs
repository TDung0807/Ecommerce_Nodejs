<div id="content" class="main-content">
    <div class="container">
        <div class="middle-content container-xxl p-0">

            <div class="row" id="cancel-row">
                <div class="col-xl-12 col-xxl-12 col-lg-6 col-md-6 col-sm-6 col-12 layout-spacing mt-4">
                    <div class="widget widget-card-four">
                        <div class="widget-content">
                            <div class="w-header">
                                <div class="w-info">
                                    <h6 class="value" id="titleRevuene">Revuene Today</h6>
                                </div>
                                <div class="task-action">
                                    <div class="dropdown">
                                        <a class="dropdown-toggle" href="#" role="button" id="expenses"
                                            data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                                stroke-linecap="round" stroke-linejoin="round"
                                                class="feather feather-more-horizontal">
                                                <circle cx="12" cy="12" r="1"></circle>
                                                <circle cx="19" cy="12" r="1"></circle>
                                                <circle cx="5" cy="12" r="1"></circle>
                                            </svg>
                                        </a>

                                        <div class="dropdown-menu left" aria-labelledby="expenses"
                                            style="will-change: transform;">
                                            <a class="dropdown-item" href="javascript:void(0);">Today</a>
                                            <a class="dropdown-item" href="javascript:void(0);">Yesterday</a>
                                            <a class="dropdown-item" href="javascript:void(0);">This Month</a>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="w-content">

                                <div class="w-info">
                                    <p class="value" id="totalRenueve">$ 45,141 </p>
                                </div>

                            </div>

                        </div>
                    </div>
                </div>


                <div class="col-xl-6 col-xxl-6 col-lg-6 col-md-6 col-sm-6 layout-spacing mt-4">
                    <div class="widget widget-t-sales-widget widget-m-income">
                        <div class="widget-content ">
                            <div class="icon ml-2">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                    fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                    stroke-linejoin="round" class="feather feather-smartphone">
                                    <rect x="5" y="2" width="14" height="20" rx="2" ry="2"></rect>
                                    <line x1="12" y1="18" x2="12.01" y2="18"></line>
                                </svg>
                            </div>
                            <div class="media-body">
                                <p class="widget-text">Total Product Sold</p>
                                <p class="widget-numeric-value" id="quantitySold">1,390</p>
                            </div>
                        </div>
                        <div class="d-flex w-bottom">
                            <p class="widget-total-stats"></p>
                            <div class="task-action">
                                <div class="dropdown">
                                    <a class="dropdown-toggle" href="#" role="button" id="statistics"
                                        data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                            viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                            stroke-linecap="round" stroke-linejoin="round"
                                            class="feather feather-more-horizontal">
                                            <circle cx="12" cy="12" r="1"></circle>
                                            <circle cx="19" cy="12" r="1"></circle>
                                            <circle cx="5" cy="12" r="1"></circle>
                                        </svg>
                                    </a>

                                    <div class="dropdown-menu left" aria-labelledby="statistics"
                                        style="will-change: transform;">
                                        <a class="dropdown-item" href="javascript:void(0);">Today</a>
                                        <a class="dropdown-item" href="javascript:void(0);">Yesterday</a>
                                        <a class="dropdown-item" href="javascript:void(0);">Last Week</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="col-xl-6 col-xxl-6 col-lg-6 col-md-6 col-sm-6 layout-spacing mt-4">
                    <div class="widget widget-t-sales-widget widget-m-income">
                        <div class="widget-content ">
                            <div class="icon-ml">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                    fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                    stroke-linejoin="round" class="feather feather-dollar-sign">
                                    <line x1="12" y1="1" x2="12" y2="23"></line>
                                    <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path>
                                </svg>
                            </div>
                            <div class="media-body">
                                <p class="widget-text">Total profit</p>
                                <p class="widget-numeric-value" id="totalProfit">1,390</p>
                            </div>
                        </div>
                        <div class="d-flex w-bottom">
                            <p class="widget-total-stats"></p>
                            <div class="task-action">
                                <div class="dropdown">
                                    <a class="dropdown-toggle" href="#" role="button" id="statistics"
                                        data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                            viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                            stroke-linecap="round" stroke-linejoin="round"
                                            class="feather feather-more-horizontal">
                                            <circle cx="12" cy="12" r="1"></circle>
                                            <circle cx="19" cy="12" r="1"></circle>
                                            <circle cx="5" cy="12" r="1"></circle>
                                        </svg>
                                    </a>

                                    <div class="dropdown-menu left" aria-labelledby="statistics"
                                        style="will-change: transform;">
                                        <a class="dropdown-item" href="javascript:void(0);">Today</a>
                                        <a class="dropdown-item" href="javascript:void(0);">Yesterday</a>
                                        <a class="dropdown-item" href="javascript:void(0);">Last Week</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="container">
                    <div class="row">
                        <div class="col-md-6">
                            <label for="start">Start date:</label>
                            <input type="text" class="form-control datepicker" id="startdate" name="start-date">
                        </div>
                        <br>
                        <div class="col-md-6">
                            <label for="end">End date:</label>
                            <input type="text" class="form-control datepicker" id="enddate" name="end-date">
                        </div>

                    </div>
                    <br>

                    <button class="btn btn-primary mb-2 me-4 mt-2" id="rangeDate">Show Report In range</button>
                    <div class="row">
                        <div class="col-md-6">
                            <label for="start">Date :</label>
                            <input type="text" class="form-control datepicker" id="onedate" name="start-date">
                        </div>
                    </div>
                    <br>

                    <button class="btn btn-primary mb-2 me-4 mt-2" id="date">Show Report this date</button>

                    <div class="col-md-6">
                        <label for="end">Show Report :</label>
                    </div>
                    <button class="btn btn-primary mb-2 me-4 mt-2" id="today">Today</button>
                    <button class="btn btn-primary mb-2 me-4 mt-2" id="yesterday">Yesterday</button>
                    <button class="btn btn-primary mb-2 me-4 mt-2" id="Month">This Week</button>

                </div>
                <div class="container">

                    <div id="chartLine" class="col-xl-12 col-xxl-12 layout-top-spacing layout-spacing">
                        <div class="statbox widget box box-shadow">
                            <div class="widget-header">
                                <div class="row">
                                    <div class="col-xl-12 col-xxl-12 col-md-12 col-sm-12 col-12">
                                    </div>
                                </div>
                            </div>
                            <div class="widget-content widget-content-area">
                                <div id="my-chart" class="">

                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

    <script>
        $(".datepicker").flatpickr({
            dateFormat: "d-m-Y"
        });
        $(document).ready(function () {
            var chart;
            var LIST_INVOICE = [];
            var REVUENETOTAL;
            var PROFIT;

            getToday();
            setChart()

            // Flatpickr initialization
            function setChart() {
                var options = {
                    chart: {
                        height: 350,
                        type: 'bar',
                        toolbar: {
                            show: false,
                        }
                    },
                    series: [{
                        name: 'Revenue',
                        data: []
                    }],
                    xaxis: {
                        categories: [],
                        type: 'date'
                    },
                    yaxis: {
                        title: {
                            text: 'Revenue (vnd)'
                        }
                    },
                    plotOptions: {
                        bar: {
                            horizontal: false,
                        },
                    },
                    title: {
                        text: 'Statistics of  '
                    }
                };

                chart = new ApexCharts(
                    $("#my-chart")[0],
                    options
                );
                chart.render();

            }
            function setData(invoice, categories, seriesData) {
                console.log(invoice.revenue)
                $("#totalRenueve").text(formatToVND(invoice.revenue));
                $("#totalProfit").text(formatToVND(invoice.profit));
                const quantity = calculateTotalQuantity(invoice);
                $("#quantitySold").text((quantity));


                chart.updateOptions({
                    xaxis: {
                        categories: categories,
                        type: 'date'
                    },
                    series: [{
                        name: 'Revenue',
                        data: seriesData
                    }]
                });

            }
            // Function to update the chart based on the selected date
            // Your chart options
            $("#rangeDate").click(function () {
                var startDate = $("#startdate").val();
                var endDate = $("#enddate").val();

                // Check if both start and end dates are filled
                if (startDate && endDate) {
                    // Add your logic for handling the selected date range here
                    //console.log("Start Date:", startDate);
                    //console.log("End Date:", endDate);
                    getByRange(startDate, endDate);
                } else {
                    // If either start or end date is not filled, show an alert
                    alert("Please select both start and end dates.");
                }
                console.log("In range button clicked");
            });

            // Click event for the "Today" button
            $("#today").click(function () {
                getToday();
                console.log("Today button clicked");
            });

            // Click event for the "Yesterday" button
            $("#yesterday").click(function () {
                getYesterday();
                console.log("Yesterday button clicked");
            });

            // Click event for the "This month" button
            $("#Month").click(function () {
                // Add your logic for the "This month" button here
                getByMonth()
                console.log("This month button clicked");
            });
            $("#date").click(function () {
                // Add your logic for the "This month" button here
                var date = $("#onedate").val();
                if (date) {
                    getByDate(date);
                } else {
                    alert("Please select date.");
                }
                console.log("This month button clicked");
            });

            // Function to format date as "dd-mm-yyyy"
            function formatDateToDDMMYYYY(date) {
                if (!(date instanceof Date)) {
                    throw new Error("Invalid date object");
                }
                const day = date.getDate().toString().padStart(2, '0');
                const month = (date.getMonth() + 1).toString().padStart(2, '0');
                const year = date.getFullYear();

                return `${day}-${month}-${year}`;
            }
            function getByDate(date) {
                $.ajax({
                    url: `/api/v1/invoices/date?date=${date}`,
                    method: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        $("#titleRevuene").text(`Revenue ${date}`);
                        
                        var categories = [];
                        var seriesData = [];
                        var total = 0;
                        
                        data.invoices.forEach(function (invoice, index) {
                            var invoiceLabel = "Invoice " + (index + 1);
                            categories.push(invoiceLabel);
                            seriesData.push(invoice.totalAmount);
                            
                            if (new Date(invoice.purchaseDate).toLocaleDateString('vi-VN') === date) {
                                total += invoice.totalAmount;
                            }
                        });

                        console.log("Total for " + date + ": " + total);
                        
                        setData(data, categories, seriesData);
                    },
                    error: function (error) {
                        console.error('Error fetching data:', error);
                    }
                });
            }
            function getByRange(start, end) {
                $.ajax({
                    url: `/api/v1/invoices/date-range?startDate=${start}&endDate=${end}`, // Replace with your API endpoint
                    method: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        $("#titleRevuene").text(`Revuene from ${start} to ${end}`)

                        var categories = [];
                        var seriesData = [];
                        data.invoices.forEach(function (invoice) {
                            const date = new Date(invoice.purchaseDate);
                            const day = date.getDate();
                            const month = date.toLocaleDateString('vi-VN', { month: 'short' });
                            const year = date.getFullYear();
                            const formattedDate = `${day} ${month} ${year}`;
                            categories.push(formattedDate);
                            seriesData.push(invoice.totalAmount);
                        });
            
                        var totals = {};
                        for (var i = 0; i < categories.length; i++) {
                            var date = categories[i];
                            var amount = seriesData[i];
                            if (totals[date]) {
                                totals[date] += amount;
                            } else {
                                totals[date] = amount;
                            }
                        }
                        setData(data, Object.keys(totals), Object.values(totals));
                    },  
                    error: function (error) {
                        console.error('Error fetching data:', error);
                    }
                })
            }
            function getByMonth() {
                $.ajax({
                    url: `/api/v1/invoices/month`, // Replace with your API endpoint
                    method: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        console.log(data.length)
                        $("#titleRevuene").text(`Revuene This Month`)

                        var categories = [];
                        var seriesData = [];
                        data.invoices.forEach(function (invoice) {
                            const date = new Date(invoice.purchaseDate);
                            const day = date.getDate();
                            const month = date.toLocaleDateString('vi-VN', { month: 'short' });
                            const year = date.getFullYear();
                            const formattedDate = `${day} ${month} ${year}`;
                            categories.push(formattedDate);
                            seriesData.push(invoice.totalAmount);
                        });
            
                        var totals = {};
                        for (var i = 0; i < categories.length; i++) {
                            var date = categories[i];
                            var amount = seriesData[i];
                            if (totals[date]) {
                                totals[date] += amount;
                            } else {
                                totals[date] = amount;
                            }
                        }
                        setData(data, Object.keys(totals), Object.values(totals));
                    },  
                    error: function (error) {
                        console.error('Error fetching data:', error);
                    }
                })
            }
            function getToday() {
                var today = new Date().toLocaleDateString('vi-VN');
                
                $.ajax({
                    url: `/api/v1/invoices/today`,
                    method: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        $("#titleRevuene").text(`Revenue Today`);
                        
                        var categories = [];
                        var seriesData = [];
                        var total = 0;
                        
                        data.invoices.forEach(function (invoice, index) {
                            var invoiceLabel = "Invoice " + (index + 1);
                            categories.push(invoiceLabel);
                            seriesData.push(invoice.totalAmount);
                            
                            if (new Date(invoice.purchaseDate).toLocaleDateString('vi-VN') === today) {
                                total += invoice.totalAmount;
                            }
                        });

                        console.log("Total for today: " + total);
                        
                        setData(data, categories, seriesData);
                    },
                    error: function (error) {
                        console.error('Error fetching data:', error);
                    }
                });
            }
            function getYesterday() {
                var yesterday = new Date();
                yesterday.setDate(yesterday.getDate() - 1);
                yesterday = yesterday.toLocaleDateString('vi-VN');
                
                $.ajax({
                    url: `/api/v1/invoices/yesterday`,
                    method: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        $("#titleRevuene").text(`Revenue Yesterday`);
                        
                        var categories = [];
                        var seriesData = [];
                        var total = 0;
                        
                        data.invoices.forEach(function (invoice, index) {
                            var invoiceLabel = "Invoice " + (index + 1);
                            categories.push(invoiceLabel);
                            seriesData.push(invoice.totalAmount);
                            
                            if (new Date(invoice.purchaseDate).toLocaleDateString('vi-VN') === yesterday) {
                                total += invoice.totalAmount;
                            }
                        });

                        
                        setData(data, categories, seriesData);
                    },
                    error: function (error) {
                        console.error('Error fetching data:', error);
                    }
                });
            }
            function formatToVND(number) {
                return number.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
            }
            function calculateTotalQuantity(invoicesData) {
                let totalQuantity = 0;

                // Iterate through each invoice
                invoicesData.invoices.forEach((invoice) => {
                    // Iterate through each product in the invoice
                    invoice.products.forEach((product) => {
                        // Add the quantity of each product to the total
                        totalQuantity += product.quantity;
                    });
                });

                return totalQuantity;
            }
        });


    </script>